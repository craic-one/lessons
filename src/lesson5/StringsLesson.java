package lesson5;

import javax.sound.midi.Soundbank;
import java.util.Arrays;

public class StringsLesson {
    public static void main(String[] args) {
        // char 16 –±–∏—Ç - —Å–∏–º–≤–æ–ª Unicode
        // –æ—Ç 0 –¥–æ 65536 –æ—Ç '\u0000 –¥–æ '\uffff

        char char1 = 'J'; // —Å–∏–º–≤–æ–ª –≤ –æ–¥–∏–Ω–∞—Ä–Ω—ã–∑ –∫–∞–≤—ã—á–∫–∞—Ö
        char char2 = 74; // –Ω–æ–º–µ—Ä —Å–∏–º–≤–æ–ª–∞, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–µ –±—ã–≤–∞–µ—Ç
        char char3 = '\u0044'; //—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–∏—Ä–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ escape –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—Å—Ç–∏

        System.out.print(char1); //J
        System.out.print(char2); //J
        System.out.print(char3); //D

        // java.lang.String
        //—Å—Ç—Ä–æ–∫–∏ –∑–∞–¥–∞—é—Ç—Å—è –≤ –¥–≤–æ–π–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö: "—Å—Ç—Ä–æ–∫–∞" - –ü–†–ò–û–†–ò–¢–ï–¢
        // –ª–∏–±–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤
        // –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ new: new String() - —ç—Ç–æ—Ç —Å–ø–æ—Å–æ–± –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ, –µ—Å–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ "" –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ

        // –°–û–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ char
        char[] jjdChars = {'\u004A', '\u004A', '\u0044'};
        String jjdString = new String(jjdChars);
        System.out.println(jjdString); // JJD
        jjdString = "\u004A\u004A\u0044";
        System.out.println(jjdString);

        // —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
        System.out.println(jjdString.length()); // 3
        System.out.println(jjdString.codePoints().count()); // 3

        char[] frogChars = {'\uD83D', '\uDC38'};
        String frogString = new String(frogChars);
        System.out.println(frogString);
        System.out.println(frogString.length()); //üê∏ - 2 -—Å–∏–º–≤–æ–ª –Æ–Ω–∏–∫–æ–¥–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –ø–∞—Ä–æ–π char–æ–≤ - —ç—Ç–æ —Å—É—Ä–æ–≥–∞—Ç–Ω–∞—è –ø–∞—Ä–∞
        System.out.println(frogString.codePoints().count()); // 1 - —ç—Ç–æ—Ç –≤–µ—Ä–Ω–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤ —Å —ç–∫—Ä–∞–Ω–∞

        // –ü—É–ª —Å—Ç—Ä–æ–∫ - —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å—Ç—Ä–æ–∫ c–æ–∑–¥–∞y–Ω—ã—Ö —á–µ—Ä–µ–∑"–¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏" –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏
        String course1 = "Java"; //
        String course2 = "Java"; // –æ–±—ä–µ–∫—Ç –æ–¥–∏–Ω, –ª–∏—à—å –Ω–∞–∑–≤–∞–∏–µ —Å—Å—ã–ª–æ–∫ —Ä–∞–∑–Ω–æ–µ
        String course3 = new String("Java");

        // —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫
        System.out.println(course1 == course2); // true
        System.out.println(course1 == course3); // false

        course1 = "Java junior Developer";
        course2 = "Java junior DEVELOPER";

        System.out.println(course1.equals(course2)); // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±—É–ª–µ–≤–æ–µ (true/false) –∑–Ω–∞—á–µ–Ω–∏–µ, —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É
        System.out.println(course1.equalsIgnoreCase(course2)); // –≤—Å–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –æ–¥–Ω–æ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, –ø–æ—Ç–æ–º –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
        System.out.println(course1.compareTo(course2)); //32 = 101 - 69 —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –Ω–æ–º–µ—Ä–∞ –≤ —é–Ω–∏–∫–æ–¥–µ –∏ –≤—ã—á–∏—Ç–∞—é—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–º –Ω–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏
        System.out.println(course1.compareToIgnoreCase(course2)); // 0 compareTo –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç int, 0 –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã
        //–ø–æ–º–∏–º–æ 0 –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å + –∏ -; + –µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –±–æ–ª—å—à–µ, - –µ—Å–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç

        String userData = null;
        String exit = "exit";
        // userData = "exit";
        // –æ—à–∏–±–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Exception in thread "main" java.lang.NullPointerException
        //System.out.println(userData.equals("exit")); // –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        System.out.println("exit".equals(userData)); // false

        // –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
        String name1 = "–°—Ç—Ä–æ–∫–∏ –≤ Java";
        String name2 = "–°—Ç—Ä–æ–∫–∏" + " " + "–≤" + " " + "Java"; //–°—Ç—Ä–æ–∫–∏ –≤ Java
        System.out.println(name1 == name2); //true

        // –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤ –º–æ–º–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        name1 = "–°—Ç—Ä–æ–∫–∏ ";
        name2 = "–≤ Java";
        System.out.println(name1 + name2 == name1 + name2); //false –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ,
        // —Ç–æ —ç—Ç–æ –¥–≤–µ —Ä–∞–∑—Ö–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ - –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞


        String start = "start"; // + –≤ —Ü–∏–∫–ª–µ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –ø–æ—Ç–º–æ—É —á—Ç–æ —Å–æ–∑–¥–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã, —á—Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ü–ö
        for (int i = 0; i < 4; i++) {
            start += " " + i;
        }
        System.out.println(start);

        // StringBuilder - —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ –≤—Ç–æ—Ä–æ–≥–æ, –¥–ª—è –æ–¥–Ω–æ–ø–æ—Ç–æ—á–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º
        //StringBuffer - –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤ –æ–±—Ä–∞–∂—â–∞—é—Ç—Å—è –∫ –æ–±—ä–µ–∫—Ç—É, –¥–ª—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã—Ö

        StringBuilder sb = new StringBuilder(); //–¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        sb.append(name1).append(name2);
        String res = sb.toString(); //—Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Ç–∏–ø–∞ java.lang.String
        System.out.println(res);

        sb = new StringBuilder("Start");
        for (int i = 0; i < 4; i++) {
            sb.append(" ").append(i);
        }
        res = sb.toString();
        System.out.println(start);

        String[] animals = {"–∫–æ—Ç", "–ø–µ—Å", "–º—ã—à—å"};
        // —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Ä–∞–∑–º–µ—Ä –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –≤ –¥–≤–∞ —Ä–∞–∑–∞ –±–æ–ª—å—à–µ, —á–µ–º —É animals

        String[] newAnimals = new String[animals.length *2];
        //[null, null, null, null, null, null]

        // –≤ —Ü–∏–∫–ª–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ä–∞–Ω–¥–æ–º–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ animals
        //Math.random()

        for (int i = 0; i < newAnimals.length; i++) {
            newAnimals[i] = animals[(int)(Math.random() * animals.length)];
        }
        System.out.println(Arrays.toString(newAnimals));

        //—É–±—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã: –Ω–∞—á–∞–ª–∞, –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏
        //trim() —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ u0020 - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤
        String someStr = " –°—Ç—Ä–æ–∫–∞ ";
        someStr = someStr.trim();

        //Java11: —É–±–∏—Ä–∞–µ—Ç –ª—é–±–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä u3000
        //strip() - —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω
        //stripLeading() - —Å –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏;
        //stripTrailing - —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏;

        // –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Å—Ç—Ä–æ–∫–∏
        char[] formStr = someStr.toCharArray();
        System.out.println(Arrays.toString(formStr));

        // –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤ .split
        String names = "Java, Kotlin, Python";
        String[] nameArr = names.split(", ");
        System.out.println(Arrays.toString(nameArr));

        //–∏–∑ –º–∞—Å—Å–∏–≤–∞ –≤ —Å—Ç—Ä–æ—á–∫—É .join
        names = String.join("! ", nameArr);
        //name = String.join
        System.out.println(names);




    }
}
